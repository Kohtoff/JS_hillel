1. false && true || true 
return: true 
Tак как правый операнд логического оператора "ИЛИ" равняется true. У оператора "И" приоритет выше, поэтому он выполняется раньше. false && true вернёт false, так как один из агументов false. 
2. false &&(true || true) 
return: false 
Tак как левый операнд логического оператор "И" равняется false, а значит правая часть игнорируется. 
3. +'40' + +'2';
return: 42
+"40" и +"2" приводят строки к числу и имеет наивысший приоритет, что означает, что это действие выполняется в первую очередь. После этого выполняется суммирование.
4. '2' + 3 ** 2;
return: "29"
Возведение в степень имеет приоритет выше, поэтому сначала 3 возводится в квадрат. После чего происходит суммирование, однако "2" - это строка, поэтому производится операция конкатенации. Мы получаем строку "29"
5. 3 ** 2 / 3;
return: 3 
Возведение в степень имеет больший приоритет и выполняется в первую очередь. После чего мы суммируем наши значения. 
6. 3 ** (9 / 3);
return: 27 
Операция группирования имеет наивысший приоритет. Выражение в скобках выполняется в первую очередь. После выполнения операции в скобках выполняется операция возведение в степень. 
7. '10' + (5 === 6);
return: "10false"
Операция группирования выполняется в первую очередь. В скобках заключена операция строго сравнение, что возвращает значение "ложь". После чего выполняется операция суммирования, однако "10" - это строка, в следствие чего производится операция конкатенации. 
8. '10' - 5 === 6;
return: false 
Строка "10" приводится к численному типу. Операция вычитание имеет больший приоритет и выполняется в первую очередь. Полученное значение мы проверяем на строгую равность. Операнды операции строгого равенства не равняются один другому, что возвращает нам значение "ложь"
9. undefined + 1; 
return: NaN
undefined - это не число. Соответственно выполнение операции суммирование невозможно, так как в результате мы получаем не число
10. (+null == false) < 1;
return: false 
Операция группирование имеет наивысший приоритет. Операции в скобках выполняются в первую очередь. Мы приводим null к числу и получаем 0. 0 - это численное значение false, а потому операция сравнение возвращает значение true. true приводиться к численному значение и мы получаем выражение 1 < 1, что является неправдой. 
11. (+null == false) < 1 ** 5;
return: false 
Операция группирование имеет наивысший приоритет. Операции в скобках выполняются в первую очередь. Мы приводим null к числу и получаем 0. 0 - это численное значение false, а потому операция сравнение возвращает значение true. После этого мы возводим единицу в 5ую степень. true приводиться к численному значение и мы получаем выражение 1 < 1, что является неправдой. 
12. 
var number = 5;
2 * ++number; 
2 * number--; 
console.log(number);

return: 5
В первом выражение мы получим 12, так как используя префиксное выражение значение переменной сразу же увеличивается на 1 и становится равным 6. Во втором выражение сначала выполняется умножение результатом которого, будет 12, а уже после этого выполняется операция дикримента, после которой значение переменной будет равняться 5. 
